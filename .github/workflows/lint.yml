# ===============================================================
# üîç  Lint & Static Analysis - Code Quality Gate
# ===============================================================
#
#   - runs each linter in its own matrix job for visibility
#   - mirrors the actual CLI commands used locally (no `make`)
#   - ensures fast-failure isolation: one failure doesn't hide others
#   - each job installs the project in dev-editable mode
#   - logs are grouped and plain-text for readability
# ---------------------------------------------------------------

name: Lint & Static Analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        include:
          # -------------------------------------------------------
          # üßº Syntax & Format Checkers
          # -------------------------------------------------------
          - id: yamllint
            setup: pip install yamllint
            cmd: yamllint -c .yamllint .

          - id: jsonlint
            setup: |
              sudo apt-get update -qq
              sudo apt-get install -y jq
            cmd: |
              find . -type f -name '*.json' -not -path './node_modules/*' -print0 |
                xargs -0 -I{} jq empty "{}"

          - id: tomllint
            setup: pip install tomlcheck
            cmd: |
              find . -type f -name '*.toml' -print0 |
                xargs -0 -I{} tomlcheck "{}"

          # -------------------------------------------------------
          # üêç Python Linters & Type Checkers
          # -------------------------------------------------------
          - id: flake8
            setup: pip install flake8
            cmd: flake8 mcpgateway

          - id: ruff
            setup: pip install ruff
            cmd: |
              ruff check mcpgateway

          - id: unimport
            setup: pip install unimport
            cmd: |
              unimport mcpgateway

          - id: vulture
            setup: pip install vulture
            cmd: |
              vulture mcpgateway --min-confidence 80

          - id: pylint
            setup: pip install pylint pylint-pydantic
            cmd: pylint mcpgateway --errors-only --fail-under=10

          - id: interrogate
            setup: pip install interrogate
            cmd: interrogate -vv mcpgateway --fail-under 100

          # Advanced Python Analysis
          - id: radon
            setup: pip install radon
            cmd: |
              radon cc mcpgateway --min C --show-complexity
              radon mi mcpgateway --min B

          # - id: mypy
          #   setup: pip install mypy
          #   cmd: mypy mcpgateway

          # - id: pycodestyle
          #   setup: pip install pycodestyle
          #   cmd: pycodestyle mcpgateway --max-line-length=200

          # - id: pydocstyle
          #   setup: pip install pydocstyle
          #   cmd: pydocstyle mcpgateway

          # - id: pyright
          #   setup: npm install -g pyright
          #   cmd: pyright mcpgateway tests

          # -------------------------------------------------------
          # üîí Security & Packaging Checks
          # -------------------------------------------------------
          # - id: bandit
          #   setup: pip install bandit
          #   cmd: bandit -r mcpgateway

          # - id: check-manifest
          #   setup: pip install check-manifest
          #   cmd: check-manifest

    name: ${{ matrix.id }}
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------------------------------
      # 0Ô∏è‚É£  Checkout
      # -----------------------------------------------------------
      - name: ‚¨áÔ∏è  Checkout source
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      # -----------------------------------------------------------
      # 1Ô∏è‚É£  Python Setup
      # -----------------------------------------------------------
      - name: üêç  Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip

      # -----------------------------------------------------------
      # 2Ô∏è‚É£  Install Project + Dev Dependencies
      # -----------------------------------------------------------
      - name: üì¶  Install project (editable mode)
        run: |
          python3 -m pip install --upgrade pip
          pip install -e .[dev]

      # -----------------------------------------------------------
      # 3Ô∏è‚É£  Install Tool-Specific Requirements
      # -----------------------------------------------------------
      - name: üîß  Install tool - ${{ matrix.id }}
        run: ${{ matrix.setup }}

      # -----------------------------------------------------------
      # 4Ô∏è‚É£  Run Linter / Validator
      # -----------------------------------------------------------
      - name: üîç  Run ${{ matrix.id }}
        run: ${{ matrix.cmd }}
